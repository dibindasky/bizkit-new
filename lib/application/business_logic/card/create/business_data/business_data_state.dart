part of 'business_data_bloc.dart';

@freezed
class BusinessDataState with _$BusinessDataState {
  const factory BusinessDataState({
    required bool isLoading,
    required bool pickImageLoading,
    required bool pickImageError,
    required bool productUpdated,
    required bool productImageupdateError,
    required bool productImageupdated,
    required bool productimageRemoveLoading,
    required bool productimageRemoved,
    required bool productimageLoading,
    required bool productUpdateLoading,
    required bool accreditationUpdateLoading,
    required bool accreditationUpdated,
    required bool hasError,
    required bool loadCompanyData,
    required bool isBusiness,
    required bool businessLoading,
    required bool businessAdded,
    required bool logoLoading,
    required bool logoAdded,
    required bool logoPickImageError,
    required bool logoImageLoading,
    required bool bankingLoading,
    required bool bankingAdded,
    required bool socialMediaLoading,
    required bool socialMediaAdded,
    required bool socialMediaDeleteLoading,
    required bool brochureLoading,
    required bool brochureAdded,
    required bool brochureDeleteLoading,
    required bool productLoading,
    required bool productAdded,
    required bool productDeleteLoading,
    required bool accreditionLoading,
    required bool accreditionAdded,
    required bool accreditionDeleteLoading,
    required bool branchLoading,
    required bool branchAdded,
    required bool branchDeleteLoading,
    required bool companyDataRemoved,
    BusinessDetails? businessData,
    int? bankDetailsCreateId,
    required List<SocialMediaHandle> socialMedias,
    required List<SocialMediaHandle> businessSocialMedias,
    required List<Accredition> accreditions,
    required List<BranchOffice> branchOffices,
    required BusinessDetails businessDetails,
    required BankDetails bankDetails,
    required List<ImageCard> accreditationPickImages,
    required List<Product> products,
    required List<ImageCard> productImages,
    required List<Brochure> brochures,
    ImageModel? logo,
    LogoCard? logoCard,
    Card? currentCard,
    required bool gotCompanyData,
    required List<Company> companiesList,
    String? message,
  }) = _Initial;

  factory BusinessDataState.initial() => BusinessDataState(
        productUpdateLoading: false,
        productImageupdateError: false,
        productImageupdated: false,
        productimageLoading: false,
        companyDataRemoved:false,
        productimageRemoved: false,
        productimageRemoveLoading: false,
        accreditationUpdated: false,
        accreditationPickImages: [],
        accreditationUpdateLoading: false,
        businessSocialMedias: [],
        productUpdated: false,
        businessDetails: BusinessDetails(),
        bankDetails: BankDetails(),
        products: [],
        productImages: [],
        isLoading: false,
        pickImageLoading: false,
        pickImageError: false,
        businessAdded: false,
        businessLoading: false,
        socialMediaDeleteLoading: false,
        socialMediaLoading: false,
        logoAdded: false,
        logoLoading: false,
        logoPickImageError: false,
        logoImageLoading: false,
        bankingAdded: false,
        bankingLoading: false,
        hasError: false,
        isBusiness: false,
        socialMedias: [],
        accreditions: [],
        branchOffices: [],
        brochures: [],
        gotCompanyData: false,
        loadCompanyData: false,
        brochureDeleteLoading: false,
        brochureLoading: false,
        productDeleteLoading: false,
        productLoading: false,
        accreditionDeleteLoading: false,
        accreditionLoading: false,
        branchDeleteLoading: false,
        branchLoading: false,
        accreditionAdded: false,
        branchAdded: false,
        brochureAdded: false,
        productAdded: false,
        socialMediaAdded: false,
        companiesList: [],
      );
}
